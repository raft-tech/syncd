name: Go Build

on:
  workflow_dispatch:
  push:
    branches: [ "develop" ]
    tags: ["*"]
  pull_request:
    branches: [ "develop" ]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          cache: true
          go-version-file: 'go.mod'
      - name: Install Dependencies
        run: |
          go get .
          go get ./examples/things/.
      - name: Verify
        run: |
          go vet ./...
          go vet ./examples/things/...
  Test:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          cache: true
          go-version-file: 'go.mod'
      - name: Vet
        run: |
          go vet ./...
          go vet ./examples/things/...
#      - name: Unit Tests
#        run: go test ./... -short -timeout 15s
  Release:
    needs: Test
    runs-on: ubuntu-latest
    if:  github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU  # Virtualization tool  
        uses: docker/setup-qemu-action@v2
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push syncd snapshot
        if: startsWith(github.ref, 'refs/tags/v') != true
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: rafttech/syncd:${{ github.sha }}

      - name: Build and push things snapshot
        if: startsWith(github.ref, 'refs/tags/v') != true
        uses: docker/build-push-action@v4
        with:
          context: examples/things/app/
          push: true
          tags: rafttech/things:${{ github.sha }}

      - name: set RELEASE_VERSION 
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Build and push syncd release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: rafttech/syncd:${{ env.RELEASE_VERSION }}

      - name: Build and push things release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v4
        with:
          context: examples/things/app/
          push: true
          tags: rafttech/things:${{ env.RELEASE_VERSION }}