syntax = "proto3";
package syncd;

option go_package = "github.com/raft-tech/syncd/pkg/api";

service Consumer {
  rpc Push (stream Record) returns (stream RecordStatus);
}

service Publisher {
  rpc Pull (stream RecordStatus) returns (stream Record);
}

message Record {
  map<string, Data> fields = 1;
}

message RecordStatus {
  Data id = 1;
  Data version = 2;
  optional uint32 error = 3;
  optional string error_field = 4;
}

enum Error {
  SERVER_ERROR = 0;
  MALFORMED_RECORD = 1;
}

enum DataType {
  UINT = 0; // encoded as uint64
  INT = 1; // encoded as sint64
  FLOAT = 2; // encoded as double
  BOOL = 3; // encoded as bool
  STRING = 4; // encoded as string
  BYTES = 5; // encoded as bytes
}

message Data {
  DataType type = 1;
  oneof value {
    uint64 uint = 2;
    sint64 int = 3;
    double float = 4;
    bool bool = 5;
    string string = 6;
    bytes bytes = 7;
  }
}